import pytest
from models.vulnerability import Vulnerability

def test_vulnerability_initialization():
    # Example data for initializing a Vulnerability
    vulnerability_data = {
        "id": "VULN-123",
        "description": "Example vulnerability description.",
        "cwes": ["CWE-79", "CWE-20"],
        "cvss": 7.5,
        "references": ["https://example.com/vuln-123", "https://example.org/vuln-123"],
        "affectedVersionRanges": ["1.0", "1.2"],
        "unaffectedVersionRanges": ["2.0"],
        "patchedVersionRanges": ["1.3"],
        "cve": "CVE-2021-12345",
        "cvssV2Vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
        "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "weaknesses": [{"id": "W-1", "description": "Example weakness"}],
        "nextSafeVersion": "2.0"
    }

    # Create an instance of Vulnerability
    vulnerability = Vulnerability(**vulnerability_data)

    # Verify that each attribute is correctly assigned
    assert vulnerability.id == vulnerability_data["id"]
    assert vulnerability.description == vulnerability_data["description"]
    assert vulnerability.cwes == vulnerability_data["cwes"]
    assert vulnerability.cvss == vulnerability_data["cvss"]
    assert vulnerability.references == vulnerability_data["references"]
    assert vulnerability.affectedVersionRanges == vulnerability_data["affectedVersionRanges"]
    assert vulnerability.unaffectedVersionRanges == vulnerability_data["unaffectedVersionRanges"]
    assert vulnerability.patchedVersionRanges == vulnerability_data["patchedVersionRanges"]
    assert vulnerability.cve == vulnerability_data["cve"]
    assert vulnerability.cvssV2Vector == vulnerability_data["cvssV2Vector"]
    assert vulnerability.cvssV3Vector == vulnerability_data["cvssV3Vector"]
    assert vulnerability.weaknesses == vulnerability_data["weaknesses"]
    assert vulnerability.nextSafeVersion == vulnerability_data["nextSafeVersion"]